name: CI

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-2022 ]
        type: [ Debug, Release ]
        preset: [ msvc-ide, clang-make ]
        include:
          - os: windows-2022
            preset: msvc-ide
            options: -DUSE_SANITIZERS=FALSE

          - os: windows-2022
            preset: clang-make
            type: Debug
            options: -DUSE_SANITIZERS=FALSE

        exclude:
          - os: ubuntu-latest
            preset: msvc-ide

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Cache LLVM
      if: runner.os == 'Windows' && matrix.preset == 'clang-make'
      id: cache-llvm
      uses: actions/cache@v3
      with:
        path: |
          C:/Program Files/LLVM
          ./llvm
        key: llvm-16

    - name: Install Windows Clang
      if: runner.os == 'Windows' && matrix.preset == 'clang-make'
      uses: KyleMayes/install-llvm-action@v1
      with:
        version: "16"
        cached: ${{ steps.cache-llvm.outputs.cache-hit }}

    - name: Configure CMake
      run: cmake -B build --preset=${{ matrix.preset }} -DCMAKE_BUILD_TYPE=${{ matrix.type }} ${{ matrix.options }}

    - name: Build
      continue-on-error: true
      run: cmake --build build/ --config ${{ matrix.type }}

    - name: Test
      continue-on-error: true
      run: ctest --test-dir build/ --output-on-failure --build-config ${{ matrix.type }} -j 2

    - name: Fuzzing
      continue-on-error: true
      run: cmake --build build/ --target betterstring-fuzz

  clang-tidy:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-2022 ]
        preset: [ clang-make ]

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Cache LLVM
      if: runner.os == 'Windows' && matrix.preset == 'clang-make'
      id: cache-llvm
      uses: actions/cache@v3
      with:
        path: |
          C:/Program Files/LLVM
          ./llvm
        key: llvm-16

    - name: Install Clang
      if: runner.os == 'Windows' && matrix.preset == 'clang-make'
      uses: KyleMayes/install-llvm-action@v1
      with:
        version: "16"
        cached: ${{ steps.cache-llvm.outputs.cache-hit }}

    - name: Configure CMake
      run: cmake -B build/ --preset=${{ matrix.preset }} -DBUILD_BENCHMARK=FALSE -DUSE_SANITIZERS=FALSE

    - name: Analyze Code
      run: cmake --build build/ --target tidy

  install:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure CMake
        run: cmake -B build/

      - name: Install
        if: runner.os == 'Linux'
        run: sudo cmake --install build/
