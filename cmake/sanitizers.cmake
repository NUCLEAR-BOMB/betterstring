include_guard(GLOBAL)

function(target_add_sanitizer target)
    cmake_parse_arguments(ARG "" "" "SANITIZERS;LIBRARIES" ${ARGN})
    if (NOT ARG_SANITIZERS)
        message(FATAL_ERROR "Please select sanitizers that will be enabled for target '${target}'")
        return()
    endif()

    cmake_parse_arguments(sanitizers "Address;UndefinedBehavior;Fuzzer" "" "" ${ARG_SANITIZERS})

    set(libraries ${ARG_LIBRARIES})
    if (CMAKE_SYSTEM_NAME STREQUAL "Windows")
        if (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
            if (sanitizers_Address)
                target_compile_definitions(${target} PRIVATE _DISABLE_VECTOR_ANNOTATION _DISABLE_STRING_ANNOTATION)
                target_compile_options(${target} PRIVATE /fsanitize=address /Zi)
                target_link_options(${target} PRIVATE /DEBUG)
            endif()
            if (sanitizers_Fuzzer)
                target_compile_options(${target} PRIVATE /fsanitize=fuzzer)
            endif()
            if (sanitizers_Address OR sanitizers_Fuzzer)
                target_link_options(${target} PRIVATE $<$<CONFIG:Debug>:/INCREMENTAL:NO>)
            endif()
            return()
        elseif(CMAKE_CXX_COMPILER_ID MATCHES "Clang" AND CMAKE_CXX_COMPILER_FRONTEND_VARIANT STREQUAL "MSVC")
            if (sanitizers_Address)
                set_property(TARGET ${target} ${libraries} APPEND PROPERTY COMPILE_OPTIONS /fsanitize=address)
                set_target_properties(${target} ${libraries} PROPERTIES MSVC_RUNTIME_LIBRARY "MultiThreaded")
                set_property(TARGET ${target} ${libraries} APPEND PROPERTY COMPILE_DEFINITIONS _DISABLE_STRING_ANNOTATION _DISABLE_VECTOR_ANNOTATION)
                target_link_libraries(${target} PRIVATE clang_rt.asan_dynamic-x86_64.lib clang_rt.asan_dynamic_runtime_thunk-x86_64.lib)
            endif()
            return()
        elseif(CMAKE_CXX_COMPILER_ID MATCHES "Clang")
            
            set_property(TARGET ${target} ${libraries} APPEND PROPERTY COMPILE_DEFINITIONS _DISABLE_STRING_ANNOTATION _DISABLE_VECTOR_ANNOTATION)
            target_link_options(${target} PRIVATE -coverage)
            if (sanitizers_Address)
                set_property(TARGET ${target} ${libraries} APPEND PROPERTY COMPILE_OPTIONS -fsanitize=address)
                target_link_options(${target} PRIVATE -fsanitize=address)
            endif()
            if (sanitizers_UndefinedBehavior)
                set_property(TARGET ${target} ${libraries} APPEND PROPERTY COMPILE_OPTIONS -fsanitize=undefined)
                target_link_options(${target} PRIVATE -fsanitize=undefined)
            endif()
            set_target_properties(${target} ${libraries} PROPERTIES MSVC_RUNTIME_LIBRARY "MultiThreaded")
            return()
        endif()
    endif()
    if (sanitizers_Address)
        target_compile_options(${target} PRIVATE -fsanitize=address)
        target_link_options(${target} PRIVATE -fsanitize=address)
    endif()
    if (sanitizers_UndefinedBehavior)
        target_compile_options(${target} PRIVATE -fsanitize=undefined)
        target_link_options(${target} PRIVATE -fsanitize=undefined)
    endif()
endfunction()